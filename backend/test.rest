### Check server root
GET http://localhost:8000
Accept: application/json

### ================= USERS =================

### Register a new user (should fail as password does not meet the password policy)
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
  "name": "ahmed",
  "email": "ahmed@me.com",
  "password": "book123"
}

###

### Register a new user
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
  "name": "ahmed",
  "email": "ahmed@me.com",
  "password": "Book123Worm%%"
}

###

### Register another user
POST http://localhost:8000/api/auth/register
Content-Type: application/json

{
  "name": "Obi1",
  "email": "Obiwan1@me.com",
  "password": "helloThere1*"
}

###

### Login user
POST http://localhost:8000/api/auth/login
Content-Type: application/json

{
  "email": "ahmed@me.com",
  "password": "Book123Worm%%"
}

###


### Get my profile
GET http://localhost:8000/api/auth/profile
Accept: application/json

###

### Logout user
POST http://localhost:8000/api/auth/logout
Content-Type: application/json

###


### ================ test lockout ================
### run this five times (wrong pass)
POST http://localhost:8000/api/auth/login
Content-Type: application/json

{
  "email": "Obiwan1@me.com",
  "password": "password"
}

###

### Logout user
POST http://localhost:8000/api/auth/logout
Content-Type: application/json

###


### try and login (should fail) try again after 1 minute should work
POST http://localhost:8000/api/auth/login
Content-Type: application/json

{
  "email": "Obiwan1@me.com",
  "password": "helloThere1*"
}

###

### ================= BANK ACCOUNTS =================

### Create a new checking account for a user
POST http://localhost:8000/api/accounts
Content-Type: application/json

{
  "userid": 1,
  "type": "checking",
  "balance": 500
}

###

### Create a new saving account for a user
POST http://localhost:8000/api/accounts
Content-Type: application/json

{
  "userid": 12,
  "type": "saving",
  "balance": 1000
}

###

### Get all accounts for a user
GET http://localhost:8000/api/accounts/1
Accept: application/json

###

### Test case: Missing type or userid should fail
POST http://localhost:8000/api/accounts
Content-Type: application/json

{
  "userid": 1
}

###

### Test case: Invalid account type should fail
POST http://localhost:8000/api/accounts
Content-Type: application/json

{
  "userid": 1,
  "type": "money",
  "balance": 500
}

###

### Test case: Attempt to delete account with transactions should fail
DELETE http://localhost:8000/api/accounts/1
Accept: application/json

###

### ================= INSECURE LAB USERS (OPTIONAL) =================

### Register insecure user (for testing only)
POST http://localhost:8000/api/auth/insecure/register
Content-Type: application/json

{
  "name": "lab_insecure",
  "email": "insecure@example.test",
  "password": "insecurePass123"
}

###

### Login insecure user (for testing only)
POST http://localhost:8000/api/auth/insecure/login
Content-Type: application/json

{
  "email": "insecure@example.test",
  "password": "insecurePass123"
}

###


### ================= TRANSACTIONS AND TRANSFERS =================

### Transfer money between accounts
POST http://localhost:8000/api/transactions
Content-Type: application/json

{
  "srcid": 1,
  "desid": 2,
  "amount": 150.00
}

### Get all transactions
GET http://localhost:8000/api/transactions

### Get specific transaction by ID
GET http://localhost:8000/api/transactions/1